### 하노이의 탑 원리 ###
# 먼저 가장 큰 원반 n을 빼내서 to_로 옮겨야 한다
# 그럴려면? 그 위에 있는 원반 n-1, n-2, ..., 1 들을 다른 기둥(via_)으로 옮겨놔야 한다 
# 그럴려면? 옮길 원반들 중 가장 큰 원반 n-1를 빼내서 다른 기둥(to_)으로 옮겨야 한다 => (즉 via_가 to_가 되는 것임)
# 그럴려면? 그 위에 있는 원반 n-2, n-3, ..., 1 들을 다른 기둥으로 옮겨놔야 한다
# ... 반복 



def hanoi(n, from_, to_, via_):  # 파라미터 : (총 원반 개수, 출발기둥, 목적기둥, 다른기둥)
    if n == 1:        
        print(from_, to_)  # 옮길 원반이 맨위 1번 원반이면 옮긴 위치를 표시하고 종료
    else:
        hanoi(n-1, from_, via_, to_)  # 1단계: 가장 큰 원반 n을 to로 옮기려면 위에 있는 원반들을 via로 옮겨놔야 한다. 재귀함수를 통해 n-1 ~ 1번 원반까지 반복.  
        print(from_, to_) # 2단계: n-1번 ~ 1번 다 옮겼으면 n을 from에서 to로 옮긴다.
        hanoi(n-1, via_, to_, from_)  # 3단계: 목적지가 아닌 곳으로 옮겨놨던 n-1부터의 원반들을 n을 옮겨놨던 to위로 올린다.    

n = int(input())
print(2**n -1)   # 총 옮긴 횟수 K : n개의 원반을 옮기는 개수는 2**n -1 이다 (공비가 2인 등비수열의 합)
hanoi(n, 1, 3, 2)