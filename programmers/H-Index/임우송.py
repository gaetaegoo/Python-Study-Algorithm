# H-Index / 
# https://programmers.co.kr/learn/courses/30/lessons/42747

# ---------접근 방법---------------------------------------------------------------------- 
'''
문제해석
논문 인용횟수 h와 인용된 논문갯수 h는 같아야 한다.
ex) 5편의 논문 중 1편이 4회 인용되었을 때, h가 4가 되려면 4회 인용된 논문이 3편 더 있어야 한다.
    만약 위에 해당하지 않고, 나머지 논문들이 모두 3회 인용되었다면 h는 3이 된다.

접근방법
h의 최댓값은 논문갯수 n이다(인용할 수 있는 논문들의 최댓값).
주어진 리스트 citations를 내림차순 정렬한 후, for문으로 확인하면서 최댓값을 산출해 본다.
'''

# ----------------------------------------------------------------------------------------

citations1 = [3, 0, 6, 1, 5]	# return 3
citations2 = [0]	

def solution(cit):
    cit.sort(reverse=True)
    H = len(cit)
    while H > 0:
        for i in range(len(cit)):
            if cit[i] < H:  # 인용횟수가 작은 논문이 있으면, 반복문 탈출하고 H-=1
                break
            elif i == H-1:  # 반복문 마지막까지(모든 논문이) 인용횟수 충족하면 H 리턴 
                return H    

        H -= 1
        cit = cit[ :H]

    return 0    # 마지막 테스트케이스 실패한 후 추가 - 모든 논문이 0회 인용일 때

# print(solution(citations1))
print(solution(citations2))



# ----------------------------------------------------------------------------------------
'''
테스트 1 〉	통과 (1.10ms, 10.2MB)
테스트 2 〉	통과 (3.89ms, 10.2MB)
테스트 3 〉	통과 (2.21ms, 10.4MB)
테스트 4 〉	통과 (1.87ms, 10.2MB)
테스트 5 〉	통과 (3.38ms, 10.2MB)
테스트 6 〉	통과 (4.73ms, 10.3MB)
테스트 7 〉	통과 (0.32ms, 10.2MB)
테스트 8 〉	통과 (0.02ms, 10.1MB)
테스트 9 〉	통과 (0.02ms, 10.2MB)
테스트 10 〉	통과 (0.56ms, 10.2MB)
테스트 11 〉	통과 (6.37ms, 10.2MB)
테스트 12 〉	통과 (0.04ms, 10.3MB)
테스트 13 〉	통과 (3.53ms, 10.2MB)
테스트 14 〉	통과 (2.89ms, 10.3MB)
테스트 15 〉	통과 (4.75ms, 10.3MB)
테스트 16 〉	통과 (0.01ms, 10.2MB)
'''



